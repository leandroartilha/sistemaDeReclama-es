// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NovoRad.Context;

namespace NovoRad.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221018185719_AddConclusaoToContext")]
    partial class AddConclusaoToContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NovoRad.Migrations.Ambiente", b =>
                {
                    b.Property<int>("AmbienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Prazo")
                        .HasColumnType("tinyint");

                    b.HasKey("AmbienteId");

                    b.ToTable("Ambiente");
                });

            modelBuilder.Entity("NovoRad.Models.AcaoTomada", b =>
                {
                    b.Property<int>("AcaoTomadaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeAcaoTomada")
                        .HasColumnType("varchar(100)");

                    b.HasKey("AcaoTomadaId");

                    b.ToTable("AcaoTomada");
                });

            modelBuilder.Entity("NovoRad.Models.Anexo", b =>
                {
                    b.Property<int>("AnexoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Autor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Bytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAnexo")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoAnexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAnexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoAnexoId")
                        .HasColumnType("int");

                    b.HasKey("AnexoId");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("TipoAnexoId");

                    b.ToTable("Anexo");
                });

            modelBuilder.Entity("NovoRad.Models.Area", b =>
                {
                    b.Property<int>("AreaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeArea")
                        .HasColumnType("varchar(50)");

                    b.HasKey("AreaId");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("NovoRad.Models.AreaDemandante", b =>
                {
                    b.Property<int>("AreaDemandanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<byte>("Prazo")
                        .HasColumnType("tinyint");

                    b.HasKey("AreaDemandanteId");

                    b.ToTable("AreaDemandante");
                });

            modelBuilder.Entity("NovoRad.Models.Classificacao", b =>
                {
                    b.Property<int>("ClassificacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prazo")
                        .HasColumnType("int");

                    b.HasKey("ClassificacaoId");

                    b.ToTable("Classificacao");
                });

            modelBuilder.Entity("NovoRad.Models.Conclusao", b =>
                {
                    b.Property<int>("ConclusaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AdvertenciaEscrita")
                        .HasColumnType("bit");

                    b.Property<bool>("AdvertenciaVerbal")
                        .HasColumnType("bit");

                    b.Property<bool>("AdvertencuaTerceiro")
                        .HasColumnType("bit");

                    b.Property<bool>("AfastamentoTerceiro")
                        .HasColumnType("bit");

                    b.Property<string>("ConsultivoJuridico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DesligamentoCJC")
                        .HasColumnType("bit");

                    b.Property<bool>("DesligamentoSJC")
                        .HasColumnType("bit");

                    b.Property<bool>("NA")
                        .HasColumnType("bit");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<int>("ResultadoId")
                        .HasColumnType("int");

                    b.Property<bool>("Suspensao")
                        .HasColumnType("bit");

                    b.Property<string>("TextoJustificativo")
                        .HasColumnType("varchar(300)");

                    b.HasKey("ConclusaoId");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("ResultadoId");

                    b.ToTable("Conclusao");
                });

            modelBuilder.Entity("NovoRad.Models.DiasPrazo", b =>
                {
                    b.Property<int>("DiasPrazoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeDiasPrazp")
                        .HasColumnType("varchar(50)");

                    b.HasKey("DiasPrazoId");

                    b.ToTable("DiasPrazo");
                });

            modelBuilder.Entity("NovoRad.Models.Envolvido", b =>
                {
                    b.Property<int>("EnvolvidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcaoTomadaId")
                        .HasColumnType("int");

                    b.Property<string>("CPF_CNPJ")
                        .HasColumnType("varchar(25)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emissor")
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(15)");

                    b.Property<int?>("MedidaDisciplinarId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomeMae")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NomePai")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NumeroSAP")
                        .HasColumnType("varchar(15)");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<bool>("PPE")
                        .HasColumnType("bit");

                    b.Property<string>("Perfil")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("RG")
                        .HasColumnType("varchar(25)");

                    b.Property<int?>("TipoEnvolvimentoId")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2)");

                    b.HasKey("EnvolvidoId");

                    b.HasIndex("AcaoTomadaId");

                    b.HasIndex("MedidaDisciplinarId");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("TipoEnvolvimentoId");

                    b.ToTable("Envolvido");
                });

            modelBuilder.Entity("NovoRad.Models.Funcionalidade", b =>
                {
                    b.Property<int>("FuncionalidadeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescricaoFuncionalidade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeFuncionalidade")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeObjetoFuncionalidade")
                        .HasColumnType("varchar(50)");

                    b.HasKey("FuncionalidadeId");

                    b.ToTable("Funcionalidade");
                });

            modelBuilder.Entity("NovoRad.Models.Historico", b =>
                {
                    b.Property<int>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acao")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Autor")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.HasKey("HistoricoId");

                    b.HasIndex("OcorrenciaId");

                    b.ToTable("Historico");
                });

            modelBuilder.Entity("NovoRad.Models.MedidaDisciplinar", b =>
                {
                    b.Property<int>("MedidaDisciplinarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeMedidaDisciplinar")
                        .HasColumnType("varchar(100)");

                    b.HasKey("MedidaDisciplinarId");

                    b.ToTable("MedidaDisciplinar");
                });

            modelBuilder.Entity("NovoRad.Models.Ocorrencia", b =>
                {
                    b.Property<int>("OcorrenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmbienteId")
                        .HasColumnType("int");

                    b.Property<int>("AreaDemandanteId")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("ClassificacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoApuracao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeAmbiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OperacaoPolicial")
                        .HasColumnType("bit");

                    b.Property<int>("PrioridadeId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("ResponsavelId")
                        .HasColumnType("int");

                    b.Property<int>("SeguimentoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2)");

                    b.Property<double>("ValorPerda")
                        .HasColumnType("float");

                    b.Property<double>("ValorRecuperado")
                        .HasColumnType("float");

                    b.HasKey("OcorrenciaId");

                    b.HasIndex("AmbienteId");

                    b.HasIndex("AreaDemandanteId");

                    b.HasIndex("ClassificacaoId");

                    b.HasIndex("PrioridadeId");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("ResponsavelId");

                    b.HasIndex("SeguimentoId");

                    b.HasIndex("StatusId");

                    b.ToTable("Ocorrencia");
                });

            modelBuilder.Entity("NovoRad.Models.Prioridade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NumeroPrioridade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prioridade");
                });

            modelBuilder.Entity("NovoRad.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeProduto")
                        .HasColumnType("varchar(40)");

                    b.HasKey("ProdutoId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("NovoRad.Models.Regional", b =>
                {
                    b.Property<int>("RegionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeRegional")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NomeTerritorio")
                        .HasColumnType("varchar(10)");

                    b.HasKey("RegionalId");

                    b.ToTable("Regional");
                });

            modelBuilder.Entity("NovoRad.Models.Responsavel", b =>
                {
                    b.Property<int>("ResponsavelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeResponsavel")
                        .HasColumnType("varchar(100)");

                    b.HasKey("ResponsavelId");

                    b.ToTable("Responsavel");
                });

            modelBuilder.Entity("NovoRad.Models.Resultado", b =>
                {
                    b.Property<int>("ResultadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeResultado")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ResultadoId");

                    b.ToTable("Resultado");
                });

            modelBuilder.Entity("NovoRad.Models.Seguimento", b =>
                {
                    b.Property<int>("SeguimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeSeguimento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SeguimentoId");

                    b.ToTable("Seguimento");
                });

            modelBuilder.Entity("NovoRad.Models.Status", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("NovoRad.Models.Tarefa", b =>
                {
                    b.Property<int>("TarefaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcaoSerTomada")
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiasPrazoId")
                        .HasColumnType("int");

                    b.Property<int>("OcorrenciaId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioId1")
                        .HasColumnType("int");

                    b.HasKey("TarefaId");

                    b.HasIndex("DiasPrazoId");

                    b.HasIndex("OcorrenciaId");

                    b.HasIndex("UsuarioId1");

                    b.ToTable("Tarefa");
                });

            modelBuilder.Entity("NovoRad.Models.TipoAnexo", b =>
                {
                    b.Property<int>("TipoAnexoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeTipoAnexo")
                        .HasColumnType("varchar(50)");

                    b.HasKey("TipoAnexoId");

                    b.ToTable("TipoAnexo");
                });

            modelBuilder.Entity("NovoRad.Models.TipoEnvolvimento", b =>
                {
                    b.Property<int>("TipoEnvolvimentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NomeTipoEnvolvimento")
                        .HasColumnType("varchar(50)");

                    b.HasKey("TipoEnvolvimentoId");

                    b.ToTable("TipoEnvolvimento");
                });

            modelBuilder.Entity("NovoRad.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RegionalId")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("AreaId");

                    b.HasIndex("RegionalId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("NovoRad.Models.UsuarioFuncionalidade", b =>
                {
                    b.Property<int>("FuncionalidadeId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasIndex("FuncionalidadeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioFuncionalidade");
                });

            modelBuilder.Entity("NovoRad.Models.Anexo", b =>
                {
                    b.HasOne("NovoRad.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Anexo")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.TipoAnexo", "TipoAnexo")
                        .WithMany("Anexo")
                        .HasForeignKey("TipoAnexoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("TipoAnexo");
                });

            modelBuilder.Entity("NovoRad.Models.Conclusao", b =>
                {
                    b.HasOne("NovoRad.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Conclusao")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Resultado", "Resultado")
                        .WithMany("Conclusao")
                        .HasForeignKey("ResultadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");

                    b.Navigation("Resultado");
                });

            modelBuilder.Entity("NovoRad.Models.Envolvido", b =>
                {
                    b.HasOne("NovoRad.Models.AcaoTomada", "AcaoTomada")
                        .WithMany("Envolvidos")
                        .HasForeignKey("AcaoTomadaId");

                    b.HasOne("NovoRad.Models.MedidaDisciplinar", "MedidaDisciplinar")
                        .WithMany("Envolvidos")
                        .HasForeignKey("MedidaDisciplinarId");

                    b.HasOne("NovoRad.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Envolvido")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.TipoEnvolvimento", "TipoEnvolvimento")
                        .WithMany("Envolvidos")
                        .HasForeignKey("TipoEnvolvimentoId");

                    b.Navigation("AcaoTomada");

                    b.Navigation("MedidaDisciplinar");

                    b.Navigation("Ocorrencia");

                    b.Navigation("TipoEnvolvimento");
                });

            modelBuilder.Entity("NovoRad.Models.Historico", b =>
                {
                    b.HasOne("NovoRad.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Historico")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ocorrencia");
                });

            modelBuilder.Entity("NovoRad.Models.Ocorrencia", b =>
                {
                    b.HasOne("NovoRad.Migrations.Ambiente", "Ambiente")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("AmbienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.AreaDemandante", "AreaDemandante")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("AreaDemandanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Classificacao", "Classificacao")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("ClassificacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Prioridade", "Prioridade")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("PrioridadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Produto", "Produto")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Responsavel", "Responsavel")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("ResponsavelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Seguimento", "Seguimento")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("SeguimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Status", "Status")
                        .WithMany("Ocorrencias")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ambiente");

                    b.Navigation("AreaDemandante");

                    b.Navigation("Classificacao");

                    b.Navigation("Prioridade");

                    b.Navigation("Produto");

                    b.Navigation("Responsavel");

                    b.Navigation("Seguimento");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("NovoRad.Models.Tarefa", b =>
                {
                    b.HasOne("NovoRad.Models.DiasPrazo", "DiasPrazo")
                        .WithMany("Tarefa")
                        .HasForeignKey("DiasPrazoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Ocorrencia", "Ocorrencia")
                        .WithMany("Tarefa")
                        .HasForeignKey("OcorrenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Usuario", "Usuario")
                        .WithMany("Tarefa")
                        .HasForeignKey("UsuarioId1");

                    b.Navigation("DiasPrazo");

                    b.Navigation("Ocorrencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NovoRad.Models.Usuario", b =>
                {
                    b.HasOne("NovoRad.Models.Area", "Area")
                        .WithMany("Usuarios")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Regional", "Regional")
                        .WithMany("Usuarios")
                        .HasForeignKey("RegionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Regional");
                });

            modelBuilder.Entity("NovoRad.Models.UsuarioFuncionalidade", b =>
                {
                    b.HasOne("NovoRad.Models.Funcionalidade", "Funcionalidade")
                        .WithMany()
                        .HasForeignKey("FuncionalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NovoRad.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionalidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NovoRad.Migrations.Ambiente", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("NovoRad.Models.AcaoTomada", b =>
                {
                    b.Navigation("Envolvidos");
                });

            modelBuilder.Entity("NovoRad.Models.Area", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("NovoRad.Models.AreaDemandante", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("NovoRad.Models.Classificacao", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("NovoRad.Models.DiasPrazo", b =>
                {
                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("NovoRad.Models.MedidaDisciplinar", b =>
                {
                    b.Navigation("Envolvidos");
                });

            modelBuilder.Entity("NovoRad.Models.Ocorrencia", b =>
                {
                    b.Navigation("Anexo");

                    b.Navigation("Conclusao");

                    b.Navigation("Envolvido");

                    b.Navigation("Historico");

                    b.Navigation("Tarefa");
                });

            modelBuilder.Entity("NovoRad.Models.Prioridade", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("NovoRad.Models.Produto", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("NovoRad.Models.Regional", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("NovoRad.Models.Responsavel", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("NovoRad.Models.Resultado", b =>
                {
                    b.Navigation("Conclusao");
                });

            modelBuilder.Entity("NovoRad.Models.Seguimento", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("NovoRad.Models.Status", b =>
                {
                    b.Navigation("Ocorrencias");
                });

            modelBuilder.Entity("NovoRad.Models.TipoAnexo", b =>
                {
                    b.Navigation("Anexo");
                });

            modelBuilder.Entity("NovoRad.Models.TipoEnvolvimento", b =>
                {
                    b.Navigation("Envolvidos");
                });

            modelBuilder.Entity("NovoRad.Models.Usuario", b =>
                {
                    b.Navigation("Tarefa");
                });
#pragma warning restore 612, 618
        }
    }
}
